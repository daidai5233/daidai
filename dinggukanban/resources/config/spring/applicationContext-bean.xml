<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 扫描基包 -->
	<context:component-scan base-package="com.xg.model.service" />
	
	<context:component-scan base-package="com.xg.model.dao" />
	
	<context:component-scan base-package="com.xg.model.controller" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	
	<!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 -->
	<!-- <context:property-placeholder location="classpath:db.properties" /> -->
	<!-- 配置数据源 ，dbcp -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
	</bean> -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />指定连接数据库的驱动
		<property name="jdbcUrl" value="${jdbc.url}" />指定连接数据库的URL
		<property name="user" value="${jdbc.username}" />指定连接数据库的用户名
		<property name="password" value="${jdbc.password}" />指定连接数据库的密码
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>指定连接池中保留的最大连接数. Default:15
		<property name="minPoolSize" value="${c3p0.minPoolSize}"/>指定连接池中保留的最小连接数
		指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}"/> 
		最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}"/> 
		当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3  
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/> 
        JDBC的标准,用以控制数据源内加载的PreparedStatements数量。  
        但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0  
        <property name="maxStatements" value="${c3p0.maxStatements}"/>  
        每60秒检查所有连接池中的空闲连接.Default:0  
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
	</bean> -->
	
</beans>